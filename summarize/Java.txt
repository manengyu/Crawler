监听器是实现监听器接口的类
处理器是监听器中的事件处理方法
为事件源绑定（也可以说成注册/添加）监听器，因为处理器在监听器内部，也将监听器说成处理器
table宽度自动换行（table加属性style="table-layout:fixed;"宽度设为width="1200px"适宜，td用固定px在手机中会按比例缩小（百分数在手机邮箱中只显示屏幕宽度多出换行），td再加上属性style="word-wrap:break-word;"）

堆是由垃圾回收来负责的。
优势是可以动态地分配内存大小，生存期也不必事先告诉编译器，因为它是在运行时动态分配内存的，Java的垃圾收集器会自动收走这些不再使用的数据。
缺点是由于要在运行时动态分配内存，存取速度较慢。
栈是由人工分配的。
优势是，存取速度比堆要快，仅次于寄存器，栈数据可以共享。
但缺点是，存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。栈中主要存放一些基本类型的变量。


传递方式Java
值传递：基本类型
引用传递：引用类型(数组也包括)

传递方式Python引用传递
不可变对象相当于值传递(整型字符型元组)

传递方式C/C++
严格区分值传递，引用传递

传递方式与数据是否引用类型有关，是否引用类型取决内存地址是否可变

http://rednaxelafx.iteye.com/blog/774673?page=4#comments
String s1 = "aaa ";  //"aaa " 是一个字符串常量，存在静态区
String s2 = "aaa ";
String s3 = new String( "aaa ");  
//产生"aaa "字符串常量对象(存在不建)即驻留（intern）在一个全局共享的字符串常量池中的实例，
//堆中新建String()类型内容为‘aaa '的实例，
//栈中新建String()类型对象即引用变量s3
//两对象，两实例
System.out.println(s1 == s2);//true　同样使用的是常量，地址相同
System.out.println(s1 == s3);//false 使用常量与使用对象(new出来的)是不同的
System.out.println(s1.equals(s3));//true 内容相同，都是 "aaa "


http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html